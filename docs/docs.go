// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Login a user with the provided credentials.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "Login User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Create a new user with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "Create User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/benefits": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Find benefit types by their attributes.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Benefit Types"
                ],
                "summary": "Find benefit types",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BenefitResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Create a new benefit type with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Benefit Types"
                ],
                "summary": "Create a new benefit type",
                "parameters": [
                    {
                        "description": "Create Benefit Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateBenefitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BenefitResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/benefits/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Get a benefit type by its ID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Benefit Types"
                ],
                "summary": "Get a benefit type by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Benefit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BenefitResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Update a benefit type with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Benefit Types"
                ],
                "summary": "Update a benefit type",
                "parameters": [
                    {
                        "description": "Update Benefit Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateBenefitRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Benefit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BenefitResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Delete a benefit type with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Benefit Types"
                ],
                "summary": "Delete a benefit type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benefit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BenefitResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/claims": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Find claims by their attributes.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Claims"
                ],
                "summary": "Find claims",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date for filtering in YYYY-MM-DD format",
                        "name": "date_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date for filtering in YYYY-MM-DD format",
                        "name": "date_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Department name for filtering",
                        "name": "department",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction type name for filtering",
                        "name": "transaction_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SLA status for filtering (e.g., meet, overdue)",
                        "name": "sla_status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Claim status for filtering (e.g., On Plafond, Over Plafond)",
                        "name": "claim_status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction status for filtering (e.g., Successful, Pending, Failed)",
                        "name": "transaction_status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClaimResponseListWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Create a new claim with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Claims"
                ],
                "summary": "Create a new claim",
                "parameters": [
                    {
                        "description": "Create Claim Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ClaimRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClaimResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/claims/get-benefits/{patientId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Find benefits by their attributes.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Claims"
                ],
                "summary": "Find benefits",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "patientId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BenefitResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/claims/get-patients": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Find patients by their attributes.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Claims"
                ],
                "summary": "Find patients",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PatientResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/claims/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Get a claim by its ID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Claims"
                ],
                "summary": "Get a claim by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Claim ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClaimResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Update a claim with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Claims"
                ],
                "summary": "Update a claim",
                "parameters": [
                    {
                        "description": "Update Claim Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateClaimRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Claim ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClaimResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Delete a claim with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Claims"
                ],
                "summary": "Delete a claim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Claim ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClaimResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/departments": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Find departments by their attributes.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Find departments",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DepartmentResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Create a new department with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Create a new department",
                "parameters": [
                    {
                        "description": "Create Department Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DepartmentResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/departments/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Get a department by its ID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Get a department by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DepartmentResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Update a department with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Update a department",
                "parameters": [
                    {
                        "description": "Update Department Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateDepartmentRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DepartmentResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Delete a department with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Delete a department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DepartmentResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/employees": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Find employees by their attributes.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Find employees",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Create a new employee with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Create a new employee",
                "parameters": [
                    {
                        "description": "Create Employee Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/employees/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Get an employee by its ID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Get an employee by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Update an employee with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Update an employee",
                "parameters": [
                    {
                        "description": "Update Employee Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateEmployeeRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Delete an employee with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Delete an employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/family-members": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Find family members by their attributes.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Family Members"
                ],
                "summary": "Find family members",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FamilyMemberResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Create a new family member with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Family Members"
                ],
                "summary": "Create a new family member",
                "parameters": [
                    {
                        "description": "Create Family Member Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FamilyMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FamilyMemberResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/family-members/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Get a family member by its ID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Family Members"
                ],
                "summary": "Get a family member by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Family Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FamilyMemberResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Update a family member with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Family Members"
                ],
                "summary": "Update a family member",
                "parameters": [
                    {
                        "description": "Update Family Member Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateFamilyMemberRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Family Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FamilyMemberResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Delete a family member with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Family Members"
                ],
                "summary": "Delete a family member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Family Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FamilyMemberResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/plan-types": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Find plan types by their attributes.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Plan Types"
                ],
                "summary": "Find plan types",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PlanTypeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Create a new plan type with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Plan Types"
                ],
                "summary": "Create a new plan type",
                "parameters": [
                    {
                        "description": "Create Plan Type Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PlanTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PlanTypeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/plan-types/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Get a plan type by its ID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Plan Types"
                ],
                "summary": "Get a plan type by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Plan Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PlanTypeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Update a plan type with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Plan Types"
                ],
                "summary": "Update a plan type",
                "parameters": [
                    {
                        "description": "Update Plan Type Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdatePlanTypeRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Plan Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PlanTypeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Delete a plan type with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Plan Types"
                ],
                "summary": "Delete a plan type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PlanTypeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/transaction-types": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Find transaction types by their attributes.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Transaction Types"
                ],
                "summary": "Find transaction types",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TransactionTypeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Create a new transaction type with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Transaction Types"
                ],
                "summary": "Create a new transaction type",
                "parameters": [
                    {
                        "description": "Create Transaction Type Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransactionTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TransactionTypeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/transaction-types/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Get a transaction type by its ID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Transaction Types"
                ],
                "summary": "Get a transaction type by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TransactionTypeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Update a transaction type with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Transaction Types"
                ],
                "summary": "Update a transaction type",
                "parameters": [
                    {
                        "description": "Update Transaction Type Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateTransactionTypeRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Transaction Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TransactionTypeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Delete a transaction type with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Transaction Types"
                ],
                "summary": "Delete a transaction type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TransactionTypeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/yearly-claims": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Find yearly benefit claim by their attributes.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Yearly Benefit Claim"
                ],
                "summary": "Find yearly benefit claim",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Code for find the yearly benefit claim controller",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.YearlyBenefitClaimWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Create a new yearly benefit claim with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Yearly Benefit Claim"
                ],
                "summary": "Create a new yearly benefit claim",
                "parameters": [
                    {
                        "description": "Create Plan Type Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.YearlyBenefitClaimRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.YearlyBenefitClaimWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/yearly-claims/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Get a yearly benefit claim its ID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Yearly Benefit Claim"
                ],
                "summary": "Get a yearly benefit claim ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Yearly Benefit Claim ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.YearlyBenefitClaimWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Update a yearly benefit claim with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Yearly Benefit Claim"
                ],
                "summary": "Update a yearly benefit claim",
                "parameters": [
                    {
                        "description": "Update Yearly Benefit Claim",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateYearlyBenefitClaimRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Yearly Benefit Claim ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.YearlyBenefitClaimWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth bearer": []
                    }
                ],
                "description": "Delete a yearly benefit claim with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Yearly Benefit Claim"
                ],
                "summary": "Delete a yearly benefit claim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Yearly Benefit Claim ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.YearlyBenefitClaimWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorWrapper"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.BenefitResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "limitation_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plafond": {
                    "type": "number"
                },
                "plan_type": {
                    "$ref": "#/definitions/model.PlanTypeResponse"
                },
                "remaining_plafond": {
                    "type": "number"
                },
                "yearly_benefit_claim": {
                    "$ref": "#/definitions/model.YearlyBenefitClaimResponse"
                },
                "yearly_max": {
                    "type": "number"
                }
            }
        },
        "model.BenefitResponseWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.BenefitResponse"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        },
        "model.ClaimRequest": {
            "type": "object",
            "required": [
                "benefit_code",
                "claim_amount",
                "patient_id"
            ],
            "properties": {
                "benefit_code": {
                    "type": "string"
                },
                "claim_amount": {
                    "type": "number"
                },
                "patient_id": {
                    "type": "integer"
                }
            }
        },
        "model.ClaimResponse": {
            "type": "object",
            "properties": {
                "approved_amount": {
                    "type": "number"
                },
                "benefit": {
                    "$ref": "#/definitions/model.BenefitResponse"
                },
                "city": {
                    "type": "string"
                },
                "claim_amount": {
                    "type": "number"
                },
                "claim_status": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "diagnosis": {
                    "type": "string"
                },
                "doc_link": {
                    "type": "string"
                },
                "employee": {
                    "$ref": "#/definitions/model.EmployeeResponse"
                },
                "id": {
                    "type": "integer"
                },
                "medical_facility": {
                    "type": "string"
                },
                "patient": {
                    "$ref": "#/definitions/model.PatientResponse"
                },
                "sla_status": {
                    "type": "string"
                },
                "submission_date": {
                    "type": "string"
                },
                "transaction_date": {
                    "type": "string"
                },
                "transaction_status": {
                    "type": "string"
                },
                "transaction_type": {
                    "$ref": "#/definitions/model.TransactionTypeResponse"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ClaimResponseListWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ClaimResponse"
                    }
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        },
        "model.ClaimResponseWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.ClaimResponse"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        },
        "model.CreateBenefitRequest": {
            "type": "object",
            "required": [
                "code",
                "limitation_type",
                "name",
                "plan_type_id"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "detail": {
                    "type": "string",
                    "maxLength": 500
                },
                "limitation_type": {
                    "type": "string",
                    "enum": [
                        "Per Year",
                        "Per Month",
                        "Per Day",
                        "Per Incident",
                        "Per Pregnancy"
                    ]
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "plafond": {
                    "type": "number"
                },
                "plan_type_id": {
                    "type": "integer"
                },
                "yearly_claim_id": {
                    "type": "integer"
                },
                "yearly_max": {
                    "type": "number"
                }
            }
        },
        "model.DepartmentRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.DepartmentResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.DepartmentResponseWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.DepartmentResponse"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        },
        "model.EmployeeRequest": {
            "type": "object",
            "required": [
                "bank_number",
                "birth_date",
                "department_id",
                "email",
                "gender",
                "join_date",
                "name",
                "phone",
                "plan_type_id",
                "position"
            ],
            "properties": {
                "bank_number": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "department_id": {
                    "type": "integer"
                },
                "dependence": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ]
                },
                "join_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "plan_type_id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "model.EmployeeResponse": {
            "type": "object",
            "properties": {
                "bank_number": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "department": {
                    "$ref": "#/definitions/model.DepartmentResponse"
                },
                "dependence": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "family_members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FamilyMemberResponse"
                    }
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "join_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "plan_type": {
                    "$ref": "#/definitions/model.PlanTypeResponse"
                },
                "position": {
                    "type": "string"
                },
                "pro_rate": {
                    "type": "number"
                }
            }
        },
        "model.EmployeeResponseWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.EmployeeResponse"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        },
        "model.ErrorWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {},
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        },
        "model.FamilyMemberRequest": {
            "type": "object",
            "required": [
                "birth_date",
                "employee_id",
                "gender",
                "name",
                "relationship_type"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "relationship_type": {
                    "type": "string",
                    "enum": [
                        "wife",
                        "husband",
                        "father",
                        "mother",
                        "child"
                    ]
                }
            }
        },
        "model.FamilyMemberResponse": {
            "type": "object",
            "required": [
                "birth_date",
                "employee",
                "gender",
                "name",
                "plan_type",
                "relationship_type"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "employee": {
                    "$ref": "#/definitions/model.EmployeeResponse"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ]
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "plan_type": {
                    "$ref": "#/definitions/model.PlanTypeResponse"
                },
                "relationship_type": {
                    "type": "string",
                    "enum": [
                        "wife",
                        "husband",
                        "father",
                        "mother",
                        "child"
                    ]
                }
            }
        },
        "model.FamilyMemberResponseWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.FamilyMemberResponse"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        },
        "model.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "username": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "model.PaginationPage": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.PatientResponse": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "employee": {
                    "$ref": "#/definitions/model.EmployeeResponse"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "plan_type": {
                    "$ref": "#/definitions/model.PlanTypeResponse"
                }
            }
        },
        "model.PatientResponseWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.PatientResponse"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        },
        "model.PlanTypeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "type": "string",
                    "maxLength": 1,
                    "minLength": 1
                }
            }
        },
        "model.PlanTypeResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.PlanTypeResponseWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.PlanTypeResponse"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        },
        "model.RegisterRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "username": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "model.TransactionTypeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "model.TransactionTypeResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.TransactionTypeResponseWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.TransactionTypeResponse"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        },
        "model.UpdateBenefitRequest": {
            "type": "object",
            "required": [
                "code",
                "id",
                "limitation_type",
                "name",
                "plan_type_id"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "detail": {
                    "type": "string",
                    "maxLength": 500
                },
                "id": {
                    "type": "integer"
                },
                "limitation_type": {
                    "type": "string",
                    "enum": [
                        "Per Year",
                        "Per Month",
                        "Per Day",
                        "Per Incident",
                        "Per Pregnancy"
                    ]
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "plafond": {
                    "type": "number"
                },
                "plan_type_id": {
                    "type": "integer"
                },
                "yearly_claim_id": {
                    "type": "integer"
                },
                "yearly_max": {
                    "type": "number"
                }
            }
        },
        "model.UpdateClaimRequest": {
            "type": "object",
            "required": [
                "approve_amount",
                "city",
                "claim_amount",
                "claim_status",
                "diagnosis",
                "doc_link",
                "id",
                "medical_facility",
                "sla",
                "submission_date",
                "transaction_date",
                "transaction_status",
                "transaction_type_id"
            ],
            "properties": {
                "approve_amount": {
                    "type": "number"
                },
                "city": {
                    "type": "string"
                },
                "claim_amount": {
                    "type": "number"
                },
                "claim_status": {
                    "type": "string",
                    "enum": [
                        "On Plafond",
                        "Over Plafond"
                    ]
                },
                "diagnosis": {
                    "type": "string"
                },
                "doc_link": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "medical_facility": {
                    "type": "string"
                },
                "sla": {
                    "type": "string",
                    "enum": [
                        "meet",
                        "overdue"
                    ]
                },
                "submission_date": {
                    "type": "string"
                },
                "transaction_date": {
                    "type": "string"
                },
                "transaction_status": {
                    "type": "string",
                    "enum": [
                        "Successful",
                        "Pending",
                        "Failed"
                    ]
                },
                "transaction_type_id": {
                    "type": "integer"
                }
            }
        },
        "model.UpdateDepartmentRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.UpdateEmployeeRequest": {
            "type": "object",
            "required": [
                "bank_number",
                "birth_date",
                "department_id",
                "email",
                "gender",
                "id",
                "join_date",
                "name",
                "phone",
                "plan_type_id",
                "position"
            ],
            "properties": {
                "bank_number": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "department_id": {
                    "type": "integer"
                },
                "dependence": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ]
                },
                "id": {
                    "type": "integer"
                },
                "join_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "plan_type_id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "model.UpdateFamilyMemberRequest": {
            "type": "object",
            "required": [
                "birth_date",
                "gender",
                "id",
                "name",
                "relationship_type"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ]
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "relationship_type": {
                    "type": "string",
                    "enum": [
                        "wife",
                        "husband",
                        "father",
                        "mother",
                        "child"
                    ]
                }
            }
        },
        "model.UpdatePlanTypeRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 1,
                    "minLength": 1
                }
            }
        },
        "model.UpdateTransactionTypeRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "model.UpdateYearlyBenefitClaimRequest": {
            "type": "object",
            "required": [
                "code",
                "yearly_claim"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 255
                },
                "yearly_claim": {
                    "type": "number"
                }
            }
        },
        "model.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserResponseWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.UserResponse"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        },
        "model.YearlyBenefitClaimRequest": {
            "type": "object",
            "required": [
                "code",
                "yearly_claim"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 255
                },
                "yearly_claim": {
                    "type": "number"
                }
            }
        },
        "model.YearlyBenefitClaimResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "yearly_claim": {
                    "type": "number"
                }
            }
        },
        "model.YearlyBenefitClaimWrapper": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.YearlyBenefitClaimResponse"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/model.PaginationPage"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Aino Medical API",
	Description:      "This is a sample swagger for Fiber",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
